services:
  db:
    image: postgres:16-alpine
    container_name: weather-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - weather_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  weather:
    container_name: weather-app
    image: ariisib/weather-app:1.0.0
    restart: always
    build:
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_URL: ${DB_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      db:
        condition: service_healthy
    networks:
      - weather_network

volumes:
  postgres_data:

networks:
  weather_network: